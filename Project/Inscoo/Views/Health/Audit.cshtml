@model Models.VHealthAuditOrder
@{
    ViewBag.Title = "订单审核";
}

<div class="orderDetails">
    <h4 class="text-primary_color"><span>基本信息</span></h4>
    <dl>
        <dt>
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control control-label" } })
        </dd>
        <dt>
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Author, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>
        <dt>
            @Html.LabelFor(model => model.Linkman, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Linkman, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>
        <dt>
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Address, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>
        <dt>
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>

        <dt>
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>

        <dt>
            @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>

        <dt>
            @Html.LabelFor(model => model.Expire, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Expire, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>
        <dt>
            @Html.LabelFor(model => model.ServicePeriod, htmlAttributes: new { @class = "control-label" })：
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ServicePeriod, new { htmlAttributes = new { @class = "form-control  control-label" } })
        </dd>
    </dl>
</div>
<div class="orderDetails">
    <h4 class="text-primary_color"><span>体检项目</span></h4>
    <table class="table table-bordered">
        <tr>
            <th>
                体检单位
            </th>
            <th>
                产品名称
            </th>
            <th>
                市场价
            </th>
            <th>
                优惠后价格
            </th>
            <th>
                数量
            </th>
            <th>
                小计(元)
            </th>
        </tr>
        @if (Model.product.Any())
        {
            foreach (var item in Model.product)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => item.CompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.PublicPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.PrivilegePrice)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.Count)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.SubTotal)
                    </td>
                </tr>
            }
        }
    </table>
</div>
<div class="orderDetails">
    <h4 class="text-primary_color"><span>审核</span></h4>
    @if (Model.IsInscooOperator && Model.State == 4 || Model.State == 7)
    {
        using (Html.BeginForm("AuditOrder", "Health", FormMethod.Post, new { @id = "EntryInfoForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.DateTicks)
            <input type="hidden" name="result" id="result" value="1" />
            <div class="orderConfirmBodyNext" style="text-align:center;">
                <input type="submit" value="审核通过" class="btn btn-primary" style="background-color: #38A6D9; border-color: #38A6D9" />
                <input type="submit" id="notPass" value="审核不通过" class="btn btn-primary" style="background-color: #38A6D9;border-color: #38A6D9 " />
            </div>
        }
    }
    @if (Model.IsFinance && Model.State == 11)
    {
        @Html.Action("FnComfirm", new { ticks = Model.DateTicks });
    }
</div>

@section Scripts {
    <script>
        jQuery(function () {
            jQuery("#notPass").click(function () {
                jQuery("#result").val(0);
            });
        })
    </script>
}
