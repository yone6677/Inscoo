@model Models.Order.ConfirmOrderModel
@{
    ViewBag.Title = "方案确认";
}

@using (Html.BeginForm("Confirm", "Order"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ids)
    <div class="orderConfirm">
        <ul class="orderConfirmLi">
            <li class="orderConfirmLiActive">
                <i class="fa fa-save fa-2x"></i>
                <span>方案确认</span>
            </li>
            <li>
                <i class="fa fa-edit fa-2x"></i>
                信息填写
            </li>
            <li>
                <i class="fa fa-cloud-upload fa-2x"></i>
                上传文件
            </li>
            <li>
                <i class="fa fa-usd fa-2x"></i>
                确认付款
            </li>
        </ul>
    </div>
    <div class="orderConfirmBody form-inline ">
        <dl>
            <dt>产品信息</dt>
            <dd>
                <table class="table table-bordered">
                    <tr>
                        <th>
                            保险责任
                        </th>
                        <th>
                            保障额度
                        </th>
                        <th>
                            赔付比例
                        </th>
                        <th>
                            保障期限
                        </th>
                    </tr>
                    @{
                        if (Model.ProdItem.Count > 0)
                        {
                            foreach (var item in Model.ProdItem)
                            {
                                <tr class="table-style-control">
                                    <td>@item.SafeguardName</td>
                                    <td>@item.CoverageSum</td>
                                    <td>@item.PayoutRatio</td>
                                    <td>一年</td>
                                </tr>
                            }
                        }
                    }
                </table>
            </dd>
            <dd class="dd-product-style">
                <ul>
                    <li class="table-style-control">
                        <span class="icon-explain">*</span>
                        @Html.LabelFor(model => model.OrderName, htmlAttributes: new { @class = "control-label" }) :
                    </li>
                    <li>
                        @{
                            if (string.IsNullOrEmpty(Model.OrderName))
                            {
                                @Html.EditorFor(model => model.OrderName, new { htmlAttributes = new { @class = "form-control product-select", placeholder = "请输入方案名称", title = "您可以给您选择的方案取一个特别的名字，例如：备选方案一" } })
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.OrderName)
                                <span>@Model.OrderName</span>
                            }
                        }
                    </li>
                </ul>
                <ul>
                    <li class="table-style-control">
                        <span class="icon-explain">*</span>
                        @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label" }) :
                    </li>
                    <li>
                        @{
                            @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control product-select", title = "您可以给您选择的方案进行注释，例如：用于高管" } })
                        }
                    </li>
                </ul>
                @if (Model.StaffRange != "0")
                {
                    <ul>
                        <li class="table-style-control">
                            <span class="icon-explain">*</span>
                            @Html.LabelFor(model => model.StaffRange, htmlAttributes: new { @class = "control-label" }) :
                        </li>
                        <li>
                            @Html.HiddenFor(model => model.StaffRange)
                            <select disabled="disabled" class="product-select" title="请选择将参加该保险方案的员工人数">
                                <option value=@Model.StaffRange selected="selected">@Model.StaffRange</option>
                            </select>
                            @* <span>@Model.StaffRange</span>*@

                        </li>
                    </ul>
                }
                <ul>
                    <li class="table-style-control">
                        @*<button data-toggle="tooltip" class="btn-explain" data-placement="left" title=""></button>*@
                        <span class="icon-explain">*</span>
                        @Html.LabelFor(model => model.AgeRange, htmlAttributes: new
                   {
                       @class = "control-label",
                       title = "请选择将参加该保险方案的员工平均年龄"
                   }) :
                    </li>
                    <li>
                        @Html.HiddenFor(model => model.AgeRange)
                        <select disabled class="product-select">
                            <option value=@Model.AgeRange selected>@Model.AgeRange</option>
                        </select>
                    </li>
                </ul>
            </dd>
        </dl>
    </div>
    <div class="orderConfirmBody">
        <dl>
            <dt>保费信息</dt>
            <dd style="padding:.5em 0 1em 0;">
                <ul>
                    <li class="table-style-control">
                        @Html.LabelFor(model => model.AnnualExpense, htmlAttributes: new { @class = "control-label" }) :
                    </li>
                    <li>
                        @Html.HiddenFor(model => model.AnnualExpense)
                        <span>@Model.AnnualExpense</span>
                    </li>
                </ul>
                @if (Model.UserRole.Count > 0)
                {
                    if (Model.UserRole.FirstOrDefault().RoleName == "Admin" || Model.UserRole.FirstOrDefault().RoleName == "PartnerChannel")
                    {
                        <ol>
                            @if (Model.HasTiYong)
                            {
                                <li>利润加成（%）:</li>
                                <li>
                                    @Html.EditorFor(model => model.TiYong, new { htmlAttributes = new { @class = "form-control", max = 500 } })
                                </li>

                                <li>对外售价（人/年）: </li>
                                <li>
                                    <input type="number" id="pretiumShow" class="form-control" disabled="disabled" value="0" />
                                    @Html.HiddenFor(model => model.pretium)

                                </li>
                            }
                            @if (Model.HasFanBao)
                            {
                                <li>理赔比率（%）: </li>
                                <li>
                                    @Html.EditorFor(model => model.FanBao, new { htmlAttributes = new { @class = "form-control", max = 100 } })
                                </li>
                            }
                        </ol>
                    }
                }
            </dd>
            <dd style="line-height:2em;text-align:center;">
                @Html.ValidationMessageFor(model => model.TiYong, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.FanBao, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.pretium, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Rebate, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.OrderName, "", new { @class = "text-danger" })
            </dd>
            <dd class="orderConfirmBodyNext">
                <div>
                    <a href="/Insurance/CustomizeProduct">返回</a>
                </div>
                <div>
                    <input type="submit" value="下一步" class="orderConfirmNextSubmit" />
                </div>
            </dd>
        </dl>
    </div>
                            }
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var AnnualExpense = $("#AnnualExpense").val();
            $("#pretium").val(AnnualExpense);
            $("#pretiumShow").val(AnnualExpense);
            $("#TiYong").blur(function () {
                var num = parseFloat($("#TiYong").val());
                var price = parseFloat(AnnualExpense);
                if (typeof (price) == "number" && typeof (num) == "number" && !isNaN(price) && !isNaN(num)) {
                    var pretium = price * (num / 100) + price;
                    $("#pretium").val(pretium);
                    $("#pretiumShow").val(pretium);
                }
            });
            $(function () { $("[data-toggle='tooltip']").tooltip(); });
        })
    </script>
}
